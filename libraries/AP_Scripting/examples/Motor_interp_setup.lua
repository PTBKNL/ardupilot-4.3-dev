-- This script is an example setting up a custom interpolated motor matrix
-- this allows a 1D interpolation between roll pitch and yaw factors for up to 12 motors

-- 0 is the value this table will be used at, followed by a table per motor for its roll pitch and yaw factors
-- in the case of tilt rotors we use 1 for forward flight and 0 for hover
add_motors_interp_table(0.000000,
                      {{-0.406086, 0.161268, 0.332390},
                       {0.500000, -0.500000, 0.500000},
                       {0.406086, 0.161268, -0.332390},
                       {-0.500000, -0.500000, -0.500000}})

add_motors_interp_table(0.043478,
                      {{-0.401834, 0.151385, 0.134353},
                       {0.523777, -0.492450, 1.000000},
                       {0.401834, 0.151385, -0.134353},
                       {-0.523777, -0.492450, -1.000000}})

add_motors_interp_table(0.086957,
                      {{-0.401827, 0.135229, -0.084075},
                       {0.550551, -0.463156, 1.000000},
                       {0.401827, 0.135229, 0.084075},
                       {-0.550551, -0.463156, -1.000000}})

add_motors_interp_table(0.130435,
                      {{-0.405207, 0.116211, -0.316550},
                       {0.580000, -0.420873, 1.000000},
                       {0.405207, 0.116211, 0.316550},
                       {-0.580000, -0.420873, -1.000000}})

add_motors_interp_table(0.173913,
                      {{-0.411287, 0.097137, -0.556960},
                       {0.611777, -0.373980, 1.000000},
                       {0.411287, 0.097137, 0.556960},
                       {-0.611777, -0.373980, -1.000000}})

add_motors_interp_table(0.217391,
                      {{-0.419472, 0.079645, -0.799840},
                       {0.645478, -0.328150, 1.000000},
                       {0.419472, 0.079645, 0.799840},
                       {-0.645478, -0.328150, -1.000000}})

add_motors_interp_table(0.260870,
                      {{-0.429212, 0.064384, -1.000000},
                       {0.680609, -0.286293, 1.000000},
                       {0.429212, 0.064384, 1.000000},
                       {-0.680609, -0.286293, -1.000000}})

add_motors_interp_table(0.304348,
                      {{-0.439960, 0.051409, -1.000000},
                       {0.716557, -0.249421, 1.000000},
                       {0.439960, 0.051409, 1.000000},
                       {-0.716557, -0.249421, -1.000000}})

add_motors_interp_table(0.347826,
                      {{-0.451156, 0.040497, -1.000000},
                       {0.752563, -0.217511, 1.000000},
                       {0.451156, 0.040497, 1.000000},
                       {-0.752563, -0.217511, -1.000000}})

add_motors_interp_table(0.391304,
                      {{-0.462202, 0.031341, -1.000000},
                       {0.787690, -0.190091, 1.000000},
                       {0.462202, 0.031341, 1.000000},
                       {-0.787690, -0.190091, -1.000000}})

add_motors_interp_table(0.434783,
                      {{-0.472447, 0.023633, -1.000000},
                       {0.820790, -0.166551, 1.000000},
                       {0.472447, 0.023633, 1.000000},
                       {-0.820790, -0.166551, -1.000000}})

add_motors_interp_table(0.478261,
                      {{-0.481167, 0.017102, -1.000000},
                       {0.850443, -0.146294, 1.000000},
                       {0.481167, 0.017102, 1.000000},
                       {-0.850443, -0.146294, -1.000000}})

add_motors_interp_table(0.521739,
                      {{-0.487545, 0.011518, -1.000000},
                       {0.874889, -0.128792, 1.000000},
                       {0.487545, 0.011518, 1.000000},
                       {-0.874889, -0.128792, -1.000000}})

add_motors_interp_table(0.565217,
                      {{-0.490767, 0.006688, -1.000000},
                       {0.892155, -0.113497, 1.000000},
                       {0.490767, 0.006688, 1.000000},
                       {-0.892155, -0.113497, -1.000000}})

add_motors_interp_table(0.608696,
                      {{-0.490044, 0.002461, -1.000000},
                       {0.900035, -0.099924, 1.000000},
                       {0.490044, 0.002461, 1.000000},
                       {-0.900035, -0.099924, -1.000000}})

add_motors_interp_table(0.652174,
                      {{-0.484466, -0.001269, -1.000000},
                       {0.895752, -0.087736, 1.000000},
                       {0.484466, -0.001269, 1.000000},
                       {-0.895752, -0.087736, -1.000000}})

add_motors_interp_table(0.695652,
                      {{-0.472954, -0.004583, -1.000000},
                       {0.875731, -0.076697, 1.000000},
                       {0.472954, -0.004583, 1.000000},
                       {-0.875731, -0.076697, -1.000000}})

add_motors_interp_table(0.739130,
                      {{-0.454213, -0.007542, -1.000000},
                       {0.835379, -0.066634, 1.000000},
                       {0.454213, -0.007542, 1.000000},
                       {-0.835379, -0.066634, -1.000000}})

add_motors_interp_table(0.782609,
                      {{-0.426743, -0.010201, -1.000000},
                       {0.768964, -0.057411, 1.000000},
                       {0.426743, -0.010201, 1.000000},
                       {-0.768964, -0.057411, -1.000000}})

add_motors_interp_table(0.826087,
                      {{-0.388965, -0.012604, -1.000000},
                       {0.669816, -0.048919, 1.000000},
                       {0.388965, -0.012604, 1.000000},
                       {-0.669816, -0.048919, -1.000000}})

add_motors_interp_table(0.869565,
                      {{-0.339591, -0.014794, -1.000000},
                       {0.531279, -0.041063, 1.000000},
                       {0.339591, -0.014794, 1.000000},
                       {-0.531279, -0.041063, -1.000000}})

add_motors_interp_table(0.913043,
                      {{-0.278350, -0.016809, -1.000000},
                       {0.348928, -0.033755, 1.000000},
                       {0.278350, -0.016809, 1.000000},
                       {-0.348928, -0.033755, -1.000000}})

add_motors_interp_table(0.956522,
                      {{-0.207080, -0.018685, -1.000000},
                       {0.124318, -0.026913, 1.000000},
                       {0.207080, -0.018685, 1.000000},
                       {-0.124318, -0.026913, -1.000000}})

add_motors_interp_table(1.000000,
                      {{-0.130744, -0.020457, -1.000000},
                       {-0.130744, -0.020457, 1.000000},
                       {0.130744, -0.020457, 1.000000},
                       {0.130744, -0.020457, -1.000000}})

Motors_interp:add_motor(0, 1) -- motor number (zero indexed) and testing order (1 indexed)
Motors_interp:add_motor(1, 3)
Motors_interp:add_motor(2, 4)
Motors_interp:add_motor(3, 2)

-- try and init with 4 motors, each motor must have been added first
assert(Motors_interp:init(4), "Failed to init Motors_interp")

-- it is also possible to set the interpolation point from the script in real-time
Motors_interp:set_interpolation_point(0)
